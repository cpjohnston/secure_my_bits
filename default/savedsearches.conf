[play_cache_generator]
action.logevent = 1
action.logevent.param.event = $result.event$
action.logevent.param.host = cache_generator
action.logevent.param.index = data_threat_universe
action.logevent.param.sourcetype = results_cache
alert.digest_mode = 0
alert.expires = 5h
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */2 * * * *
description = Logs results of saved searches to a new dataset to be used via a playbook framework.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = *datasource here* \
| stats count values(field1) as field1 values(field2) as field2 by main_field \
| eval row="" \
| foreach row * \
    [| eval row=row + "\"" + "<<FIELD>>" + "\": \"" + mvjoin('<<FIELD>>',"||") + "\", "] \
| eval row = "{" + rtrim(substr(row,12), ", ") + "}" \
| rename count as something \
| stats values(row) as row count(row) as row_count by something \
| eval results="["+mvjoin(mvindex(row,0,999),", ")+"]" \
| eval event="" \
| eval total_len=len(results)\
| eval rows_used=mvcount(mvindex(row,0,999))\
| foreach something row_count rows_used total_len results \
    [| eval event=event + "\"" + "<<FIELD>>" + "\": " + if(like('<<FIELD>>',"[%"),'<<FIELD>>', "\"" + '<<FIELD>>' + "\"") + ", "]\
| eval event="{"+rtrim(event,", ")+"}" \
| fields event
